---
interface NavLink {
  name: string;
  href: string;
  icon: string;
}

const navLinks: NavLink[] = [
  { name: "Home", href: "#home", icon: "home" },
  { name: "Experience", href: "#experience", icon: "experience" },
  { name: "Projects", href: "#projects", icon: "projects" },
  { name: "Technologies", href: "#technologies", icon: "technologies" },
  { name: "About", href: "#about", icon: "about" },
  { name: "Contact", href: "#contact", icon: "contact" },
];
---

<header class="bg-transparent text-white fixed w-full z-10 mt-4">
  <div class="flex justify-center max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div
      id="nav-container"
      class="flex justify-center w-auto transition-colors duration-300 rounded-full px-5 py-2 bg-opacity-0 bg-secondary-700"
    >
      <div class="flex items-center gap-4">
        {
          navLinks.map((link) => (
            <>
              <a
                id={link.name.toLowerCase() + "-link"}
                href={link.href}
                class="text-lg hidden sm:block hover:text-primary-400 leading-5 nav-link"
              >
                {link.name}
              </a>
              <a
                id={link.name.toLowerCase() + "-link"}
                href={link.href}
                class="text-lg sm:hidden hover:text-primary-400 leading-5 nav-link"
              >
                <img
                  src={`/images/nav/${link.icon}.svg`}
                  alt={link.name}
                  class="w-6 h-6"
                />
              </a>
            </>
          ))
        }
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const navContainer = document.getElementById("nav-container");

    const updateNavContainerClasses = () => {
      if (navContainer !== null) {
        if (window.scrollY > 50) {
          navContainer.classList.remove("bg-opacity-0");
          navContainer.classList.add("backdrop-blur");
          navContainer.classList.add("bg-opacity-70");
        } else {
          navContainer.classList.remove("bg-opacity-70");
          navContainer.classList.remove("backdrop-blur");
          navContainer.classList.add("bg-opacity-0");
        }
      }
    };

    document
      .querySelectorAll<HTMLAnchorElement>(".nav-link")
      .forEach((link) => {
        link.addEventListener("click", (event: MouseEvent) => {
          event.preventDefault();
          const targetId = link.getAttribute("href");
          if (targetId) {
            const targetElement = document.querySelector(targetId);
            if (targetElement) {
              window.scrollTo({
                top: targetElement.getBoundingClientRect().top + window.scrollY,
                behavior: "smooth",
              });
              // Actualizar la URL sin recargar la p√°gina
              history.pushState(null, "", targetId);
            }
          }
        });
      });

    document.addEventListener("scroll", updateNavContainerClasses);

    // Check initial scroll position on DOM load
    updateNavContainerClasses();
  });
</script>
