---
import type { TimelineItem } from "../interfaces/timeline-item";

interface Props {
  items: TimelineItem[];
}

const { items } = Astro.props;
---

<ol class="relative border-l border-gray-200 dark:border-gray-700">
  {
    items.map((item, index) => (
      <li class="mb-10 ml-6 flex items-start gap-14">
        <div>
          <span class="absolute flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full -left-3 ring-8 ring-white dark:ring-gray-900 dark:bg-blue-900">
            <svg
              class="w-2.5 h-2.5 text-blue-800 dark:text-blue-300"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
            </svg>
          </span>
          <h3 class="flex items-center mb-1 text-lg font-semibold text-gray-900 dark:text-white">
            {item.title}
            {index === 0 && (
              <span class="bg-blue-100 text-blue-800 text-sm font-medium mr-2 px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300 ml-3">
                Latest
              </span>
            )}
          </h3>
          <time class="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
            {item.date}
          </time>
          <p class="mb-4 text-base font-normal text-gray-500 dark:text-gray-400">
            {item.description}
          </p>
        </div>
        {item.imageUrl && (
          <div class="w-1/2 min-h-36 max-w-64">
            <img src={item.imageUrl} alt={item.title} class="w-full h-auto rounded-lg hover:scale-95 transition-all duration-300 object-cover"/>
          </div>
        )}
      </li>
    ))
  }
</ol>
